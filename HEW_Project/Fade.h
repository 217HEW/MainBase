//**************************************************************
//
//	Fade.h
//	フェード処理ヘッダ
//
//--------------------------------------------------------------
//	製作者：上月大地
//--------------------------------------------------------------
//**************************************************************

//**************************************************************
//	開発履歴
//	2021/11/30	フェード制御実装開始
//	編集者：柴山凜太郎
//--------------------------------------------------------------
//	2021/12/03	フェード制御ベース実装完了
//	編集者：柴山凜太郎
//--------------------------------------------------------------
//	2021/12/06	柴山凜太郎君のプログラムを元に変更
//	編集者：上月大地
//--------------------------------------------------------------
//	2021/12/21	GetFadeState関数宣言にコメント追加
//	編集者：柴山凜太郎
//--------------------------------------------------------------
//	2021/12/22	コメントの編集&追加
//	編集者：柴山凜太郎
//
//**************************************************************
#pragma once

//**************************************************************
// インクルード部
//**************************************************************
#include "main.h"
#include "SceneManager.h"

//**************************************************************
// 列挙体宣言
//**************************************************************

// シーン状態
enum E_FADE_STATE
{
	FADE_NONE = 0,		// 何もしていない
	FADE_IN,			// フェードイン
	FADE_OUT,			// フェードアウト

	MAX_FADE
};

// テクスチャ
typedef enum {
	
	LOAD = 0,		// Now Loadingテクスチャ
	LOGO,			// キャラ顔テクスチャ

	FADE_TEX_MAX	// 最大数
} FADE_TEX;

struct Color
{
	static float r;
	static float g;
	static float b;
	static float a;
};

//**************************************************************
// プロトタイプ宣言
//**************************************************************
class CSceneManager;
class CFade
{
public:
	CFade();
	~CFade();

	HRESULT Init(); // 初期化
	void Uninit();	// 終了処理
	void Update();	// 更新
	void Draw();	// 描画

	// フェードアウト開始
	void StartFadeOut(int eNext);
	//フェード状態取得
	E_FADE_STATE GetFadeState();
private:
	Color m_color;		// 色
	static ID3D11ShaderResourceView* g_pTexture[FADE_TEX_MAX];	// フェード用テクスチャ
	static E_FADE_STATE m_eState;	// フェード状態
	static int m_nNext;			// 次のシーン
	CSceneManager* m_SManager;
};
